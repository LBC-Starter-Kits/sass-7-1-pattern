// -----------------------------------------------------------------------------
// This file contains reusable layouts and grids
// -----------------------------------------------------------------------------

.container{
    &--classic{
        max-width: min(95%, $max-width);
        margin: 0 auto;
    }

    &--static{
        max-width: $max-width;
        padding-left: 20px;
        padding-right: 20px;
        width: 100%;
        margin: 0 auto;
    }

    &--fluid{
        --padding-inline: 1rem;
        --content-max-width: #{$max-width};        
        --breakout-max-width: calc(#{$max-width} + 10ch);
        --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);

        display: grid;
        grid-template-columns: 
        [full-width-start] css-minmax(var(--padding-inline), 1fr)
        [breakout-start] css-minmax(0, var(--breakout-size)) 
        [content-start] css-min(calc(100% - (var(--padding-inline) * 2)), var(--content-max-width)) [content-end] 
        css-minmax(0, var(--breakout-size)) [breakout-end] 
        css-minmax(var(--padding-inline), 1fr) [full-width-end];

        & > * {
            grid-column: content;
        }

        & > .breakout {
            grid-column: breakout;
        }

        & > .full-width {
            grid-column: full-width;
        }        
    }
}

// Cluster

.cluster{
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
}

// Flexible Grid

.flexible-grid{
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;

    & > * {
        flex: 1;
    }
}

// Auto Grid

.auto-grid{
    --min-column-size: 20rem;

    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(auto-fit, css-minmax( css-min(var(--min-column-size), 100%) , 1fr));    
}

// Reel

.reel{
    --num-slides-visibles: 2;
    --gap: 1rem;

    display: grid;
    gap: var(--gap);
    grid-auto-flow: column;
    grid-auto-columns: calc((100% / var(--num-slides-visibles)) - (var(--gap) / 2));
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
    scroll-padding: var(--gap);

    & > * {
        scroll-snap-align: start;
    }
}

// Main with sidebar

.main-with-sidebar{
    --gap: 1rem;
    --sidebar-size: 300px;
    --main-min-size: 500px;

    display: flex;
    flex-wrap: wrap;
    align-items: start;
    gap: var(--gap);

    & > :first-child{
        flex-basis: var(--main-min-size);
        flex-grow: 9999;        
    }

    & > :last-child{
        flex-basis: var(--sidebar-size);
        flex-grow: 1;
    }
}

